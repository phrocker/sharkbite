language: cpp
sudo: required
matrix:
  include:
    # works on Precise and Trusty
    - os: linux
      before_install:
       - pyenv global $(pyenv whence 2to3)  # activate all python versions
       - PY_CMD=python3
       - $PY_CMD -m pip install --user --upgrade pip wheel
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - g++-7
            - libbz2-dev
            - libgsasl7-dev
            - uuid-dev
            - libboost-all-dev
            - cmake
            - libgtest-dev
            - libevent-dev
            - libssl-dev
            - libprotobuf-dev
            - protobuf-compiler
      env:
         - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: osx
      osx_image: xcode12.2
      addons:
        homebrew:
          packages:
          - flex
          - python
          - bison
before_install:
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export HOMEBREW_NO_AUTO_UPDATE=1;
      brew install flex bison;
      brew install python3;
      brew link --force flex bison;
    fi
before_script:
  - eval "${MATRIX_EVAL}"
  # We need to use newer versions of Flex and Bison on MacOS X (the ones from Homebrew).
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export CMAKE_INCLUDE_PATH="/usr/local/opt/flex/include"; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export CMAKE_LIBRARY_PATH="/usr/local/opt/flex/lib;/usr/local/opt/bison/lib"; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export LDFLAGS="-L/usr/local/opt/bison/lib" && export PATH="/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH"; fi
script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; 
    then travis_wait 40 mkdir -p build && cd build && cmake -DTRAVIS=ON -D CMAKE_C_COMPILER=gcc-8 -D CMAKE_CXX_COMPILER=g++-8 .. && make -j4  && ctest --debug;
    else travis_wait 40 mkdir -p build && cd build && cmake -DTRAVIS=ON -D CMAKE_C_COMPILER=gcc-8 -D CMAKE_CXX_COMPILER=g++-8 -DBUILD_PYTHON_TESTS=ON -DBUILD_JAR=ON -DPYTHON_ITERATOR_SUPPORT=ON .. && make -j4 && ctest --debug;
    fi
